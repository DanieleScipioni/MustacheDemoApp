<!--
 ******************************************************************************
 MIT License
 
 Copyright (c) 2017 Daniele Scipioni
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 ******************************************************************************
-->

<Page
    x:Class="MustacheDemo.App.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:app="using:MustacheDemo.App"
    xmlns:viewModels="using:MustacheDemo.App.ViewModels"
    xmlns:converters="using:MustacheDemo.App.Converters"
    mc:Ignorable="d"
    DataContext="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ViewModelLocator}}">
    <Page.Resources>
        <converters:ValueConverter x:Key="ValueConverter"/>

        <GridLength x:Key="GridLength">62</GridLength>

        <Style x:Key="LocalTextBlockButtonStyle" TargetType="Button" BasedOn="{StaticResource TextBlockButtonStyle}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
        </Style>

        <DataTemplate x:Key="StringDataTemplate" x:DataType="viewModels:ContextEntry">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource GridLength}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0"
                        Style="{StaticResource LocalTextBlockButtonStyle}"
                        Command="{x:Bind EditCommand}">
                    <TextBlock Text="Abc"/>
                </Button>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="12,0,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Text="{x:Bind Key, Mode=OneWay}"/>
                <TextBlock Grid.Column="1" Grid.Row="0"
                           HorizontalAlignment="Right" VerticalAlignment="Center"
                           Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource ValueConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="NumberDataTemplate" x:DataType="viewModels:ContextEntry">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource GridLength}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0"
                        Style="{StaticResource LocalTextBlockButtonStyle}"
                        Command="{x:Bind EditCommand}">
                    <TextBlock Text="#.##"/>
                </Button>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="12,0,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Text="{x:Bind Key, Mode=OneWay}"/>
                <TextBlock Grid.Column="1" Grid.Row="0"
                           HorizontalAlignment="Right" VerticalAlignment="Center"
                           Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource ValueConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BoolDataTemplate" x:DataType="viewModels:ContextEntry">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource GridLength}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleSwitch Grid.Column="0" Grid.Row="0" MinWidth="20"
                              OnContent="" OffContent=""
                              HorizontalAlignment="Center" IsOn="{x:Bind Value, Converter={StaticResource ValueConverter}, Mode=TwoWay}" />
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="12,0,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Text="{x:Bind Key, Mode=OneWay}"/>
                <TextBlock Grid.Column="1" Grid.Row="0"
                           HorizontalAlignment="Right" VerticalAlignment="Center"
                           Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource ValueConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ListDataTemplate" x:DataType="viewModels:ContextEntry">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource GridLength}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0"
                        Style="{StaticResource LocalTextBlockButtonStyle}"
                        Command="{x:Bind EditCommand}">
                    <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE8FD;"/>
                </Button>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="12,0,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Text="{x:Bind Key, Mode=OneWay}"/>
                <Button Grid.Column="1" Grid.Row="0"
                        Style="{StaticResource TextBlockButtonStyle}"
                        HorizontalAlignment="Right" Command="{x:Bind EditCommand}">
                    <TextBlock VerticalAlignment="Center" Margin="12,0,0,0"
                               Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource ValueConverter}}"/>
                </Button>
            </Grid>
        </DataTemplate>

        <app:DataDataTemplateSelector x:Key="DataDataTemplateSelector" 
                                      StringDataTemplate="{StaticResource StringDataTemplate}"
                                      NumberDataTemplate="{StaticResource NumberDataTemplate}"
                                      BoolDataTemplate="{StaticResource BoolDataTemplate}"
                                      ListDataTemplate="{StaticResource ListDataTemplate}"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <!-- 
        This StackPanel is used only to define command bars,
        after page initialization all children are removed from it and the
        command bars are set to Page.BottomAppBar with Pivot_OnSelectionChanged event handler
        -->
        <StackPanel x:Name="HiddenElementContainer" Visibility="Collapsed">
            <CommandBar x:Name="TemplateCommandBar">
                <CommandBar.PrimaryCommands>
                    <AppBarButton HorizontalAlignment="Center" Label="Render"
                              Command="{x:Bind _viewModel.RenderCommand}">
                        <AppBarButton.Icon>
                            <PathIcon HorizontalAlignment="Center"
                                  Data="M 12,0 l -7,10 h 3 l -8,10
                                        l 15,-12 h -4 l 9,-8
                                        z" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton Icon="Edit" Label="Edit template" Command="{x:Bind _viewModel.EditTemplateCommand}"/>
                </CommandBar.PrimaryCommands>
            </CommandBar>
            <CommandBar x:Name="DataCommandBar">
                <CommandBar.PrimaryCommands>
                    <AppBarButton Icon="Up" Label="Up" Command="{x:Bind _viewModel.UpCommand}"/>
                    <AppBarButton Icon="Delete" Label="Delete" Command="{x:Bind _viewModel.RemoveDataCommand}"/>
                    <AppBarButton Icon="Edit" Label="Edit" Command="{x:Bind _viewModel.EditSelectedDataCommand}"/>
                    <AppBarButton Icon="Add" Label="Add" Command="{x:Bind _viewModel.AddDataCommand}"/>
                </CommandBar.PrimaryCommands>
            </CommandBar>
        </StackPanel>
        <Pivot SelectionChanged="Pivot_OnSelectionChanged">
            <PivotItem Header="Template">
                <TextBox AcceptsReturn="True" 
                         ScrollViewer.HorizontalScrollBarVisibility="Visible"
                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                         TextChanged="TemplateTextBox_OnTextChanged"
                         Text="{x:Bind _viewModel.Template, Mode=OneWay}"
                         IsReadOnly="{x:Bind _viewModel.RenderCompleted, Mode=OneWay}"
                         PlaceholderText="Fill with your template" />
            </PivotItem>
            <PivotItem Header="Data">
                <ListView ItemsSource="{x:Bind _viewModel.Data}" ItemTemplateSelector="{StaticResource DataDataTemplateSelector}"
                          SelectedIndex="{x:Bind _viewModel.SelectedIndex, Mode=TwoWay}" DoubleTapped="DataEntry_OnDoubleTapped">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </PivotItem>
        </Pivot>
    </Grid>
</Page>
